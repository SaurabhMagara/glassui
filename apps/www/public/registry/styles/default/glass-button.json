{
  "name": "glass-button",
  "dependencies": [
    "shadcn"
  ],
  "files": [
    {
      "name": "glass-button.tsx",
      "content": "\"use client\"\n\nimport { useCallback, useState } from \"react\"\n\nimport { Button } from \"@/components/ui/button\"\n\nexport default function GlassButton({\n  name = \"Glass Button\",\n}: {\n  name?: string\n}) {\n  const [cracked, setCracked] = useState(false)\n\n  const handleClick = useCallback(() => {\n    setCracked(true)\n    setTimeout(() => setCracked(false), 2000) // Reset after 2 seconds\n  }, [])\n\n  return (\n    <>\n      <Button\n        onClick={handleClick}\n        className={`\n          relative overflow-hidden\n          bg-opacity-10 bg-white backdrop-filter backdrop-blur-xl\n          border border-opacity-20 border-white\n          shadow-lg\n          text-white font-semibold\n          px-8 py-4 rounded-xl\n          transition-all duration-300 ease-in-out\n          hover:bg-opacity-20 hover:scale-105\n          active:scale-95\n          before:content-[''] before:absolute before:inset-0\n          before:bg-gradient-to-r before:from-transparent before:via-white before:to-transparent before:opacity-20\n          before:transform before:rotate-45 before:transition-transform before:duration-1000\n          hover:before:translate-x-full\n        `}\n      >\n        {name}\n        {cracked && (\n          <svg\n            className=\"absolute inset-0 w-full h-full pointer-events-none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <defs>\n              <radialGradient\n                id=\"crack-gradient\"\n                cx=\"50%\"\n                cy=\"50%\"\n                r=\"50%\"\n                fx=\"50%\"\n                fy=\"50%\"\n              >\n                <stop offset=\"0%\" stopColor=\"rgba(255,255,255,0.8)\" />\n                <stop offset=\"100%\" stopColor=\"rgba(255,255,255,0)\" />\n              </radialGradient>\n            </defs>\n            {Array.from({ length: 50 }).map((_, i) => (\n              <path\n                key={i}\n                d={`M${50 + Math.random() * 50},${50 + Math.random() * 50} \n                   Q${Math.random() * 100},${Math.random() * 100} \n                    ${Math.random() * 100},${Math.random() * 100}\n                   T${Math.random() * 100},${Math.random() * 100}`}\n                stroke=\"url(#crack-gradient)\"\n                strokeWidth={Math.random() * 2 + 0.5}\n                fill=\"none\"\n                className=\"crack-line\"\n                style={{\n                  animationDelay: `${Math.random() * 0.5}s`,\n                  opacity: Math.random() * 0.5 + 0.5,\n                }}\n              />\n            ))}\n          </svg>\n        )}\n      </Button>\n      <style jsx>{`\n        .crack-line {\n          stroke-dasharray: 1000;\n          stroke-dashoffset: 1000;\n          animation: crack 0.8s cubic-bezier(0.25, 0.1, 0.25, 1) forwards;\n        }\n        @keyframes crack {\n          to {\n            stroke-dashoffset: 0;\n          }\n        }\n      `}</style>\n    </>\n  )\n}\n"
    }
  ],
  "type": "components:ui"
}