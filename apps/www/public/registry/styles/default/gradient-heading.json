{
  "name": "gradient-heading",
  "dependencies": [
    "@radix-ui/react-slot"
  ],
  "files": [
    {
      "name": "gradient-heading.tsx",
      "content": "import React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst headingVariants = cva(\r\n  \"tracking-tight pb-3 bg-clip-text text-transparent\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-gradient-to-t from-neutral-700 to-neutral-800 dark:from-stone-200 dark:to-neutral-200\",\r\n        pink: \"bg-gradient-to-t from-accent to-accent/90 dark:from-stone-200 dark:to-neutral-200\",\r\n        light: \"bg-gradient-to-t from-neutral-200 to-neutral-300\",\r\n        secondary:\r\n          \"bg-gradient-to-t from-primary-foreground to-muted-foreground\",\r\n      },\r\n      size: {\r\n        default: \"text-2xl sm:text-3xl lg:text-4xl\",\r\n        xxs: \"text-base sm:text-lg lg:text-lg\",\r\n        xs: \"text-lg sm:text-xl lg:text-2xl\",\r\n        sm: \"text-xl sm:text-2xl lg:text-3xl\",\r\n        md: \"text-2xl sm:text-3xl lg:text-4xl\",\r\n        lg: \"text-3xl sm:text-4xl lg:text-5xl\",\r\n        xl: \"text-4xl sm:text-5xl lg:text-6xl\",\r\n        xxl: \"text-5xl sm:text-6xl lg:text-[6rem]\",\r\n        xxxl: \"text-5xl sm:text-6xl lg:text-[8rem]\",\r\n      },\r\n      weight: {\r\n        default: \"font-bold\",\r\n        thin: \"font-thin\",\r\n        base: \"font-base\",\r\n        semi: \"font-semibold\",\r\n        bold: \"font-bold\",\r\n        black: \"font-black\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n      weight: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface HeadingProps extends VariantProps<typeof headingVariants> {\r\n  asChild?: boolean\r\n  children: React.ReactNode\r\n  className?: string\r\n}\r\n\r\nconst GradientHeading = React.forwardRef<HTMLHeadingElement, HeadingProps>(\r\n  ({ asChild, variant, weight, size, className, children, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"h3\" // default to 'h3' if not a child\r\n    return (\r\n      <Comp ref={ref} {...props} className={className}>\r\n        <span className={cn(headingVariants({ variant, size, weight }))}>\r\n          {children}\r\n        </span>\r\n      </Comp>\r\n    )\r\n  }\r\n)\r\n\r\nGradientHeading.displayName = \"GradientHeading\"\r\n\r\n// Manually define the variant types\r\nexport type Variant = \"default\" | \"pink\" | \"light\" | \"secondary\"\r\nexport type Size =\r\n  | \"default\"\r\n  | \"xxs\"\r\n  | \"xs\"\r\n  | \"sm\"\r\n  | \"md\"\r\n  | \"lg\"\r\n  | \"xl\"\r\n  | \"xxl\"\r\n  | \"xxxl\"\r\nexport type Weight = \"default\" | \"thin\" | \"base\" | \"semi\" | \"bold\" | \"black\"\r\n\r\nexport { GradientHeading, headingVariants }"
    }
  ],
  "type": "components:ui"
}